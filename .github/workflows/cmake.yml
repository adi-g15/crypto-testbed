# The ubuntu and windows workflows were in single file, separating for independent build status batches
name: CMake

on:
  push:
  schedule:
    - cron: "0 0 * * sun"

env:
  BUILD_TYPE: Debug

jobs:
  build-arch:
    runs-on: ubuntu-latest
    container:
      image: archlinux:base-devel

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: pacman -Sy git clang lld python openssl protobuf zeromq cmake pkg-config curl --noconfirm

      # Install rustc and cargo
      - run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

      - name: Configure CMake
        run: cmake -B build

      - name: Build
        shell: bash
        run: source $HOME/.cargo/env && cmake --build build --config $BUILD_TYPE
       
  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt update && sudo apt install libssl-dev protobuf-compiler libzmq3-dev g++ cmake python3-distutils python3-dev pkg-config  libcurl4 -y

    #    - name: Install latest clang (log fails to compile with clang-10)
    #      run: bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"

    - name: Configure CMake
      shell: bash
      run: cmake -B build -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    # rustc already installed in github action containers
    - name: Build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build build --config $BUILD_TYPE

